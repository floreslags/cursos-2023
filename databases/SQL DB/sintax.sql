-- Comentarios de una línea

/*
    Comentarios de líneas 
    múltiples
*/

/* 
    - No hay distincion de letras mayúsculas o minúsculas
    - Recomendaciones:
        - Los COMANDOS y PALABRAS RESERVADAS en MySQL se define en MAYÚSCULAS
        - Los nombres de OBJETOS y DATOS se definen en MINÚSCULAS con _snake_case_
        - Usar comillas simples para strings (`''`)
        - Todas las sentencias o instrucciones terminan con punto y coma (`;`)
*/




-- :::::::::: DDL PARA GESTIÓN DE BASES DE DATOS ::::::::::

-- Mostrar o listar las bases de datos existentes
SHOW DATABASES;

-- CREAR UNA BASE DE DATOS
CREATE DATABASE curso_sql;

-- ELIMINAR UNA BASE DE DATOS
DROP DATABASE curso_sql;

-- USAR UNA DETERMINADA BASE DE DATOS;
USE curso_sql;

-- GESTION + CONDICIONALES IF EXISTS & IF NOT EXISTS (-- BUENAS PRÁCTICAS --)
-- CREAR UNA BASE DE DATOS CON CLÁUSULA CONDICIONAL
CREATE DATABASE IF NOT EXISTS curso_sql; 
CREATE DATABASE IF NOT EXISTS for_floreslags; 

-- ELIMINAR UNA BASE DE DATOS CON CLÁUSULA CONDICIONAL
DROP DATABASE IF EXISTS curso_sql; 





-- :::::::::: DCL PARA GESTION DE USUARIOS ::::::::::

-- CREAR UN USUARIO
CREATE USER 'floreslags'@'localhost' IDENTIFIED BY 'qwerty';

-- ## GESTION DE PRIVILEGIOS ##
-- ASIGNAR TODOS LOS PRIVILEGIOS
USE for_floreslags;
GRANT ALL PRIVILEGES ON for_floreslags TO 'floreslags'@'localhost';

-- ACTUALIZAR LISTA DE TODOS LOS PRIVILEGIOS CADA VEZ QUE SE ACTUALICEN
FLUSH PRIVILEGES;

-- MOSTRAR PRIVILEGIOS DE UN USUARIO
SHOW GRANTS FOR 'floreslags'@'localhost';

-- ASIGNAR UN CONJUNTO LOS PRIVILEGIOS
GRANT [PRIV1,PRIV2,ETC] ON for_floreslags TO 'floreslags'@'localhost';

-- REVOCAR O ELIMINAR TODOS LOS PRIVILEGIOS
REVOKE ALL, GRANT OPTION FROM 'floreslags'@'localhost';

-- ELIMINAR UN USUARIO
DROP USER 'floreslags'@'localhost';







-- :::::::::: DDL PARA GESTION DE TABLAS ::::::::::

-- USAR O SELECCIONAR UNA DETERMINADA BASE DE DATOS PARA GESTIONAR
USE curso_sql;

-- MOSTRAR LISTA TABLAS
SHOW TABLES;

-- CREAR UNA TABLA CREATE TABLE table_name
CREATE TABLE users(
    name VARCHAR(50),
    email VARCHAR(50)
);

-- MOSTRAR UNA TABLA Y SU ESTRUCTURA DESCRIBE table_name
DESCRIBE users;

-- AGREGAR UN CAMPO O ATRIBUTO A UNA TABLA ALTER TABLE table_name ADD COLUMN
ALTER TABLE users ADD COLUMN birthdate VARCHAR(15);

-- MODIFICAR UN CAMPO O ATRIBUTO A UNA TABLA ALTER TABLE table_name MODIFY
ALTER TABLE users MODIFY birthdate DATE;

-- RE-NOMBRAR UN CAMPO O ATRIBUTO A UNA TABLA ALTER TABLE table_name MODIFY
ALTER TABLE users RENAME COLUMN birthdate TO birthday;

-- ELIMINAR UN CAMPO O ATRIBUTO A UNA TABLA ALTER TABLE table_name ADD COLUMN
ALTER TABLE users DROP COLUMN birthday;

-- ELIMINAR UNA TABLA
DROP TABLE users;

-- CREAR UNA TABLA CON PK, UNSIGNED (NO VALORES NEGATIVOS), AUTOINCREMENTAL, VALORES ÚNICOS
CREATE TABLE users(
    user_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(30) NOT NULL,
    last_name VARCHAR(30) NOT NULL,
    email VARCHAR(50) UNIQUE,
    address VARCHAR(100) DEFAULT 'No Address Defined',
    age INT DEFAULT 0  
);




-- :::::::::: DML PARA GESTION DE REGISTROS DE UNA TABLA CRUD ::::::::::

-- CREAR UN  REGISTRO FORMA 1 (MALA PRÁCTICA)
INSERT INTO users VALUES(0,'Sergio','Flores','floreslags@mail.com','My addresss',29);

-- CREAR UN  REGISTRO FORMA 2 (FORMA RECOMENDADA)
INSERT INTO users (name,last_name,age) VALUES('Brian Javier','Vazquez',26);

-- CREAR UN  REGISTRO FORMA 3 (OPCIONAL)
INSERT INTO users SET name = 'Billy', last_name = 'Flowers', age = 3;

-- CREAR UN CONJUNTO DE REGISTROS
INSERT INTO users (name,last_name,email,age) VALUES
('Brenda','Flowers','curlydog@mail.com',1),
('Bruno','Flowers','rockercat@mail.com',3);

-- RECUPERAR / EXTRAER UN CONJUNTO DE REGISTROS
SELECT * FROM users;

-- EXTRAER DETERMINADOS CAMPOS O ATRIBUTOS DE UN REGISTRO
SELECT name, age, user_id FROM users;

-- FUNCIÓN CONTAR(): RECUENTO DE REGISTROS EXISTENTES DE UNA TABLA
SELECT COUNT(*) FROM users;

-- FUNCIÓN CONTAR(): RECUENTO DE REGISTROS EXISTENTES DE UNA TABLA CON 'ALIAS'
SELECT COUNT(*) AS total_usuarios FROM users;
SELECT COUNT(*) total_usuarios FROM users;


--- :::::::::: DML IMPLEMENTANDO CLÁUSULAS DE COMPRARACIÓN PARA CONSULTA DE REGISTROS DE UNA TABLA EN BASE ::::::::::

-- CLÁUSULA WHERE: EXTRACCION DE DATOS DE UNA TABLA EN BASE A UN VALOR DE CONSULTA
SELECT * FROM users WHERE name = 'Sergio';

-- CLÁUSULA WHERE IN: EXTRACCION DE DATOS DE UNA TABLA EN BASE A MÚLTIPLES VALORES DE CONSULTA
SELECT * FROM users WHERE name IN ('Sergio','Brenda');

-- CLÁUSULA LIKE: EXTRACCION DE DATOS DE UNA TABLA EN DONDE EL VALOR DE ENTRADA INICIA CON DETERMINADO VALOR
SELECT * FROM users WHERE last_name LIKE 'F%';

-- CLÁUSULA LIKE: EXTRACCION DE DATOS DE UNA TABLA EN DONDE EL VALOR DE ENTRADA TERMINA CON DETERMINADO VALOR
SELECT * FROM users WHERE email LIKE '%@mail.com';

-- CLÁUSULA LIKE: EXTRACCION DE DATOS DE UNA TABLA EN DONDE EL VALOR DE ENTRADA INICIA Y TERMINA CON DETERMINADO VALOR
SELECT * FROM users WHERE name LIKE '%br%';

-- CLÁUSULA NOT LIKE: EXTRACCION DE DATOS DE UNA TABLA EN DONDE EL VALOR DE ENTRADA NO INICIA CON DETERMINADO VALOR
SELECT * FROM users WHERE last_name NOT LIKE 'F%';

-- CLÁUSULA NOT LIKE: EXTRACCION DE DATOS DE UNA TABLA EN DONDE EL VALOR DE ENTRADA NO TERMINA CON DETERMINADO VALOR
SELECT * FROM users WHERE email NOT LIKE '%@mail.com';

-- CLÁUSULA NOT LIKE: EXTRACCION DE DATOS DE UNA TABLA EN DONDE EL VALOR DE ENTRADA NO INICIA NI TERMINA CON DETERMINADO VALOR
SELECT * FROM users WHERE name NOT LIKE '%br%';



--- :::::::::: DML IMPLEMENTANDO OPERADORES RELACIONALES PARA CONSULTA DE REGISTROS DE UNA TABLA EN BASE ::::::::::

-- CONSULTA DE UNA TABLA CON OPERADOR RELACIONAL 'NO ES IGUAL'
SELECT * FROM users WHERE age != 3;

-- CONSULTA DE UNA TABLA CON OPERADOR RELACIONAL 'ES DIFERENTE A O DE'
SELECT * FROM users WHERE age <> 3;

-- CONSULTA DE UNA TABLA CON OPERADOR RELACIONAL 'ES IGUAL'
SELECT * FROM users WHERE age = 3;

-- CONSULTA DE UNA TABLA CON OPERADOR RELACIONAL 'MAYOR QUE'
SELECT * FROM users WHERE age > 3;

-- CONSULTA DE UNA TABLA CON OPERADOR RELACIONAL 'MAYORO O IGUAL QUE'
SELECT * FROM users WHERE age >= 3;

-- CONSULTA DE UNA TABLA CON OPERADOR RELACIONAL 'MENOR QUE'
SELECT * FROM users WHERE age < 3;

-- CONSULTA DE UNA TABLA CON OPERADOR RELACIONAL 'MENOR O IGUAL QUE'
SELECT * FROM users WHERE age <= 3;



--- :::::::::: DML IMPLEMENTANDO OPERADORES LÓGICOS PARA CONSULTA DE REGISTROS DE UNA TABLA EN BASE ::::::::::

-- CONSULTA DE UNA TABLA CON OPERADOR LÓGICO 'NOT'
SELECT * FROM users WHERE NOT address = 'No Address Defined';
SELECT * FROM users WHERE address != 'No Address Defined';

-- CONSULTA DE UNA TABLA CON OPERADOR LÓGICO 'AND'
SELECT * FROM users WHERE address != 'No Address Defined' AND age >= 3;

-- CONSULTA DE UNA TABLA CON OPERADOR LÓGICO 'OR'
SELECT * FROM users WHERE address != 'No Address Defined' OR age >= 3;